plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.bike2"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        defaultConfig {
            ndk {
                abiFilters 'armeabi-v7a', 'x86'
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5+'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'com.google.firebase:firebase-auth:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.google.firebase:firebase-firestore:23.0.1'
    compile project(":unityLibrary-release")
    compile fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.firebase:firebase-analytics'
    implementation platform('com.google.firebase:firebase-bom:28.2.0')
    implementation 'com.android.support:multidex:1.0.3'
}
task deleteObjectJar(type: Delete){
    delete 'release/AndroidPlugin.jar'
}

// from 경로에 위치한 class결과물을 release 폴더에 AndroidPlugin.jar이름으로 위치.
task exportJar(type: Copy){
    from('build/intermediates/packaged-classes/release/')
    into('release/')
    include('classes.jar')
    rename('classes.jar', 'AndroidPlugin.jar')
}

// exportJar 실행시 deleteObjectJar가 실행되도록 의존성 연결.
exportJar.dependsOn(deleteObjectJar, build)